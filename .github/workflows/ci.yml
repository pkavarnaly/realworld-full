name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  cypress-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: realworld
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install root dependencies
        run: npm install

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Wait for PostgreSQL
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5433 -U postgres && break
            echo "Waiting for PostgreSQL..."
            sleep 3
          done

      - name: Push DB schema with Prisma
        working-directory: ./backend
        run: npx prisma db push --schema=src/prisma/schema.prisma
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/realworld

      - name: Seed database
        working-directory: ./backend
        run: npx tsx src/prisma/seed.ts
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5433/realworld

      - name: Start backend and frontend with Docker Compose
        run: docker compose up -d --build

      - name: Wait for backend to be ready
        run: |
          for i in {1..20}; do
            curl -s http://localhost:3000/api/articles && break || sleep 3
          done

      - name: Run Cypress tests
        run: npx cypress run
        env:
          CYPRESS_baseUrl: http://localhost:4100

      - name: Upload Cypress artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/videos
            cypress/screenshots